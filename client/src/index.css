@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Inter:wght@300;400;500;600;700&family=Space+Grotesk:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */

:root {
  --button-outline: rgba(0, 0, 0, .10);
  --badge-outline: rgba(0, 0, 0, .05);
  --opaque-button-border-intensity: -8;
  --elevate-1: rgba(0, 0, 0, .03);
  --elevate-2: rgba(0, 0, 0, .08);

  /* Bright Blue/Purple Light Mode - More Visible */
  --background: 0 0% 100%;
  --foreground: 250 100% 25%;
  --border: 250 80% 60%;
  --card: 260 100% 98%;
  --card-foreground: 250 100% 25%;
  --card-border: 250 80% 60%;
  --sidebar: 260 100% 97%;
  --sidebar-foreground: 250 100% 25%;
  --sidebar-border: 250 80% 60%;
  --sidebar-primary: 240 100% 50%;
  --sidebar-primary-foreground: 0 0% 100%;
  --sidebar-accent: 250 100% 88%;
  --sidebar-accent-foreground: 250 100% 25%;
  --sidebar-ring: 240 100% 50%;
  --popover: 260 100% 98%;
  --popover-foreground: 250 100% 25%;
  --popover-border: 250 80% 60%;
  --primary: 240 100% 50%;
  --primary-foreground: 0 0% 100%;
  --secondary: 250 100% 88%;
  --secondary-foreground: 250 100% 25%;
  --muted: 250 100% 95%;
  --muted-foreground: 250 60% 40%;
  --accent: 300 100% 50%;
  --accent-foreground: 0 0% 100%;
  --destructive: 0 85% 60%;
  --destructive-foreground: 0 0% 100%;
  --input: 260 100% 99%;
  --ring: 240 100% 50%;
  --chart-1: 240 100% 50%;
  --chart-2: 250 80% 40%;
  --chart-3: 300 100% 50%;
  --chart-4: 250 70% 35%;
  --chart-5: 240 70% 40%;

  --font-sans: 'Poppins', 'Inter', sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem;
  --shadow-2xs: 0px 1px 2px 0px hsl(220 20% 20% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(220 20% 20% / 0.08);
  --shadow-sm: 0px 1px 3px 0px hsl(220 20% 20% / 0.08), 0px 1px 2px -1px hsl(220 20% 20% / 0.05);
  --shadow: 0px 1px 3px 0px hsl(220 20% 20% / 0.08), 0px 1px 2px -1px hsl(220 20% 20% / 0.05);
  --shadow-md: 0px 4px 6px -1px hsl(220 20% 20% / 0.08), 0px 2px 4px -2px hsl(220 20% 20% / 0.05);
  --shadow-lg: 0px 10px 15px -3px hsl(220 20% 20% / 0.08), 0px 4px 6px -4px hsl(220 20% 20% / 0.05);
  --shadow-xl: 0px 20px 25px -5px hsl(220 20% 20% / 0.08), 0px 8px 10px -6px hsl(220 20% 20% / 0.05);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 20% 20% / 0.15);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Modern border fallback */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255, 255, 255, .10);
  --badge-outline: rgba(255, 255, 255, .05);
  --opaque-button-border-intensity: 9;
  --elevate-1: rgba(255, 255, 255, .04);
  --elevate-2: rgba(255, 255, 255, .09);

  /* Space/Cosmic Theme - Deep Dark with Neon Blue/Orange */
  --background: 220 30% 2%;
  --foreground: 0 0% 98%;
  --border: 215 100% 60%;
  --card: 220 30% 4%;
  --card-foreground: 0 0% 98%;
  --card-border: 215 100% 60%;
  --sidebar: 220 30% 3%;
  --sidebar-foreground: 0 0% 98%;
  --sidebar-border: 215 100% 60%;
  --sidebar-primary: 215 100% 70%;
  --sidebar-primary-foreground: 220 30% 2%;
  --sidebar-accent: 32 100% 60%;
  --sidebar-accent-foreground: 220 30% 2%;
  --sidebar-ring: 215 100% 70%;
  --popover: 220 30% 4%;
  --popover-foreground: 0 0% 98%;
  --popover-border: 215 100% 60%;
  --primary: 215 100% 70%;
  --primary-foreground: 220 30% 2%;
  --secondary: 220 20% 12%;
  --secondary-foreground: 0 0% 98%;
  --muted: 220 20% 8%;
  --muted-foreground: 0 0% 75%;
  --accent: 32 100% 60%;
  --accent-foreground: 220 30% 2%;
  --destructive: 0 85% 60%;
  --destructive-foreground: 0 0% 98%;
  --input: 220 20% 10%;
  --ring: 215 100% 70%;
  --chart-1: 215 100% 70%;
  --chart-2: 195 100% 60%;
  --chart-3: 32 100% 60%;
  --chart-4: 215 100% 55%;
  --chart-5: 195 100% 65%;

  --shadow-2xs: 0px 1px 2px 0px hsl(222 47% 5% / 0.15);
  --shadow-xs: 0px 1px 3px 0px hsl(222 47% 5% / 0.20);
  --shadow-sm: 0px 1px 3px 0px hsl(222 47% 5% / 0.20), 0px 1px 2px -1px hsl(222 47% 5% / 0.15);
  --shadow: 0px 1px 3px 0px hsl(222 47% 5% / 0.20), 0px 1px 2px -1px hsl(222 47% 5% / 0.15);
  --shadow-md: 0px 4px 6px -1px hsl(222 47% 5% / 0.20), 0px 2px 4px -2px hsl(222 47% 5% / 0.15);
  --shadow-lg: 0px 10px 15px -3px hsl(222 47% 5% / 0.20), 0px 4px 6px -4px hsl(222 47% 5% / 0.15);
  --shadow-xl: 0px 20px 25px -5px hsl(222 47% 5% / 0.20), 0px 8px 10px -6px hsl(222 47% 5% / 0.15);
  --shadow-2xl: 0px 25px 50px -12px hsl(222 47% 5% / 0.25);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Blue Glow Effects - Dark Mode */
  .dark .neon-glow {
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid #3B82F6;
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.3), inset 0 0 20px rgba(59, 130, 246, 0.1);
  }

  .dark .neon-glow-orange {
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid #FF6B35;
    box-shadow: 0 0 20px rgba(255, 107, 53, 0.3), inset 0 0 20px rgba(255, 107, 53, 0.1);
  }

  .dark .neon-glow-blue {
    background: rgba(0, 0, 0, 0.8);
    border: 1px solid #60A5FA;
    box-shadow: 0 0 25px rgba(96, 165, 250, 0.4), inset 0 0 15px rgba(96, 165, 250, 0.1);
  }

  /* Blue/Orange Effects - Light Mode */
  .neon-glow {
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid #3B82F6;
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.4), inset 0 0 10px rgba(59, 130, 246, 0.1);
  }

  .neon-glow-orange {
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid #FF6B35;
    box-shadow: 0 0 20px rgba(255, 107, 53, 0.4), inset 0 0 10px rgba(255, 107, 53, 0.1);
  }

  .neon-glow-blue {
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid #60A5FA;
    box-shadow: 0 0 25px rgba(96, 165, 250, 0.4), inset 0 0 15px rgba(96, 165, 250, 0.1);
  }

  /* Neon Button Effects - Dark Mode */
  .dark .btn-neon {
    background: linear-gradient(45deg, #C6FF00, #A3FF12);
    border: 2px solid #C6FF00;
    box-shadow: 0 0 20px rgba(198, 255, 0, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3);
    color: #000;
    font-weight: 600;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .dark .btn-neon:hover {
    transform: scale(1.05) translateY(-2px);
    box-shadow: 0 0 30px rgba(198, 255, 0, 0.6), 0 0 15px rgba(57, 255, 20, 0.4), 0 8px 25px rgba(0, 0, 0, 0.4);
    border-color: #39FF14;
    background: linear-gradient(45deg, #39FF14, #C6FF00);
  }

  .dark .btn-neon-yellow {
    background: linear-gradient(45deg, #F5FF00, #C6FF00);
    border: 2px solid #F5FF00;
    box-shadow: 0 0 20px rgba(245, 255, 0, 0.4), 0 4px 15px rgba(0, 0, 0, 0.3);
    color: #000;
    font-weight: 600;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .dark .btn-neon-yellow:hover {
    transform: scale(1.05) translateY(-2px);
    box-shadow: 0 0 30px rgba(245, 255, 0, 0.6), 0 0 15px rgba(198, 255, 0, 0.4), 0 8px 25px rgba(0, 0, 0, 0.4);
  }

  /* Bright Blue/Purple Buttons - Light Mode */
  .btn-neon {
    background: linear-gradient(45deg, #00B4FF, #0080FF);
    border: 2px solid #00B4FF;
    box-shadow: 0 0 20px rgba(0, 180, 255, 0.4), 0 4px 15px rgba(0, 0, 0, 0.1);
    color: #fff;
    font-weight: 600;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .btn-neon:hover {
    transform: scale(1.05) translateY(-2px);
    box-shadow: 0 0 30px rgba(0, 180, 255, 0.6), 0 0 15px rgba(0, 128, 255, 0.4), 0 8px 25px rgba(0, 0, 0, 0.2);
    border-color: #8A2BE2;
    background: linear-gradient(45deg, #8A2BE2, #00B4FF);
  }

  .btn-neon-yellow {
    background: linear-gradient(45deg, #FF00FF, #8A2BE2);
    border: 2px solid #FF00FF;
    box-shadow: 0 0 20px rgba(255, 0, 255, 0.4), 0 4px 15px rgba(0, 0, 0, 0.1);
    color: #fff;
    font-weight: 600;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .btn-neon-yellow:hover {
    transform: scale(1.05) translateY(-2px);
    box-shadow: 0 0 30px rgba(255, 0, 255, 0.6), 0 0 15px rgba(138, 43, 226, 0.4), 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  /* Simplified card hover with subtle transform only */
  .card-hover {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .card-hover:hover {
    transform: translateY(-2px);
  }

  /* Navigation Link Animations */
  .nav-link {
    position: relative;
    overflow: hidden;
  }

  .nav-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, hsl(var(--primary)), hsl(var(--accent)));
    transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .nav-link:hover::after {
    width: 100%;
  }

  /* Fade in and slide up animation */
  .fade-in-up {
    opacity: 0;
    transform: translateY(30px);
    animation: fadeInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Space/Cosmic Background Effects */
  .space-bg {
    background: linear-gradient(135deg, #000511 0%, #001122 25%, #000819 50%, #001633 75%, #000511 100%);
    background-size: 400% 400%;
    animation: cosmicWave 20s ease infinite;
    position: relative;
    overflow: hidden;
  }

  .space-bg::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
      radial-gradient(2px 2px at 20px 30px, rgba(59, 130, 246, 0.8), transparent),
      radial-gradient(2px 2px at 40px 70px, rgba(59, 130, 246, 0.6), transparent),
      radial-gradient(1px 1px at 90px 40px, rgba(255, 255, 255, 0.9), transparent),
      radial-gradient(1px 1px at 130px 80px, rgba(255, 255, 255, 0.7), transparent),
      radial-gradient(2px 2px at 160px 30px, rgba(59, 130, 246, 0.8), transparent),
      radial-gradient(1px 1px at 200px 90px, rgba(255, 255, 255, 0.8), transparent),
      radial-gradient(2px 2px at 240px 50px, rgba(59, 130, 246, 0.7), transparent),
      radial-gradient(1px 1px at 280px 20px, rgba(255, 255, 255, 0.9), transparent),
      radial-gradient(1px 1px at 320px 100px, rgba(255, 255, 255, 0.6), transparent),
      radial-gradient(2px 2px at 360px 60px, rgba(59, 130, 246, 0.8), transparent);
    background-repeat: repeat;
    background-size: 400px 200px;
    animation: starTwinkle 15s linear infinite;
    pointer-events: none;
  }

  @keyframes cosmicWave {
    0% { background-position: 0% 50%; }
    25% { background-position: 100% 50%; }
    50% { background-position: 100% 100%; }
    75% { background-position: 0% 100%; }
    100% { background-position: 0% 50%; }
  }

  @keyframes starTwinkle {
    0% { 
      transform: translateX(0) translateY(0);
      opacity: 1;
    }
    50% { 
      opacity: 0.3;
    }
    100% { 
      transform: translateX(-400px) translateY(-200px);
      opacity: 1;
    }
  }

  /* Cosmic Portal Effects */
  .cosmic-portal {
    position: relative;
    width: 400px;
    height: 400px;
    border-radius: 50%;
    background: radial-gradient(circle, rgba(59, 130, 246, 0.1) 0%, rgba(59, 130, 246, 0.3) 30%, rgba(0, 0, 0, 0.8) 70%, rgba(0, 0, 0, 1) 100%);
    border: 2px solid rgba(59, 130, 246, 0.8);
    box-shadow: 
      0 0 50px rgba(59, 130, 246, 0.6),
      inset 0 0 50px rgba(59, 130, 246, 0.2),
      0 0 100px rgba(59, 130, 246, 0.4);
    animation: portalPulse 4s ease-in-out infinite;
  }

  .cosmic-portal::before {
    content: '';
    position: absolute;
    top: 10px;
    left: 10px;
    right: 10px;
    bottom: 10px;
    border-radius: 50%;
    border: 1px solid rgba(59, 130, 246, 0.5);
    animation: portalRotate 20s linear infinite;
  }

  .cosmic-portal::after {
    content: '';
    position: absolute;
    top: 20px;
    left: 20px;
    right: 20px;
    bottom: 20px;
    border-radius: 50%;
    border: 1px solid rgba(59, 130, 246, 0.3);
    animation: portalRotate 15s linear infinite reverse;
  }

  @keyframes portalPulse {
    0%, 100% { 
      box-shadow: 
        0 0 50px rgba(59, 130, 246, 0.6),
        inset 0 0 50px rgba(59, 130, 246, 0.2),
        0 0 100px rgba(59, 130, 246, 0.4);
    }
    50% { 
      box-shadow: 
        0 0 80px rgba(59, 130, 246, 0.8),
        inset 0 0 80px rgba(59, 130, 246, 0.3),
        0 0 150px rgba(59, 130, 246, 0.6);
    }
  }

  @keyframes portalRotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  /* Orange Accent Effects for CTAs */
  .orange-glow {
    background: linear-gradient(45deg, #ff6b35, #ff8c42);
    border: 2px solid #ff6b35;
    box-shadow: 
      0 0 30px rgba(255, 107, 53, 0.6),
      0 4px 15px rgba(0, 0, 0, 0.3);
    color: white;
    font-weight: 600;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .orange-glow:hover {
    transform: scale(1.05) translateY(-2px);
    box-shadow: 
      0 0 50px rgba(255, 107, 53, 0.8),
      0 0 25px rgba(255, 140, 66, 0.6),
      0 8px 25px rgba(0, 0, 0, 0.4);
    background: linear-gradient(45deg, #ff8c42, #ff6b35);
  }

  /* Fade In + Slide Up Animation */
  .fade-slide-up {
    opacity: 0;
    transform: translateY(50px);
    animation: fadeSlideUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  @keyframes fadeSlideUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Neon Text Glow - Dark Mode */
  .dark .text-neon {
    color: #C6FF00;
    text-shadow: 0 0 10px #C6FF00, 0 0 20px #C6FF00, 0 0 30px #39FF14;
  }

  /* Bright Blue/Purple Text - Light Mode */
  .text-neon {
    color: #00B4FF;
    text-shadow: 0 0 8px #00B4FF, 0 0 15px #8A2BE2, 0 0 20px #0080FF;
  }

  .text-neon-yellow {
    color: #F5FF00;
    text-shadow: 0 0 10px #F5FF00, 0 0 20px #F5FF00, 0 0 30px #C6FF00;
  }

  /* Neon Icon Effects - Dark Mode */
  .dark .icon-neon {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    filter: drop-shadow(0 0 5px currentColor);
  }

  .dark .icon-neon:hover {
    transform: scale(1.1) rotate(10deg);
    color: #C6FF00;
    filter: drop-shadow(0 0 15px #C6FF00) drop-shadow(0 0 25px #39FF14);
  }

  /* Bright Blue/Purple Icon Effects - Light Mode */
  .icon-neon {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    filter: drop-shadow(0 0 5px currentColor);
  }

  .icon-neon:hover {
    transform: scale(1.1) rotate(10deg);
    color: #00B4FF;
    filter: drop-shadow(0 0 15px #00B4FF) drop-shadow(0 0 25px #8A2BE2);
  }

  /* Pulsing Glow Animation - Dark Mode */
  .dark .pulse-glow {
    animation: pulseGlowDark 2s ease-in-out infinite;
  }

  @keyframes pulseGlowDark {
    0%, 100% {
      box-shadow: 0 0 20px rgba(198, 255, 0, 0.3);
    }
    50% {
      box-shadow: 0 0 40px rgba(198, 255, 0, 0.6), 0 0 20px rgba(57, 255, 20, 0.4);
    }
  }

  /* Pulsing Glow Animation - Light Mode */
  .pulse-glow {
    animation: pulseGlowLight 2s ease-in-out infinite;
  }

  @keyframes pulseGlowLight {
    0%, 100% {
      box-shadow: 0 0 20px rgba(0, 180, 255, 0.3);
    }
    50% {
      box-shadow: 0 0 40px rgba(0, 180, 255, 0.6), 0 0 20px rgba(138, 43, 226, 0.4);
    }
  }

  /* Cyberpunk Cards with Neon Glow - Dark Mode */
  .dark .cyber-card {
    background: rgba(0, 0, 0, 0.9);
    border: 1px solid #C6FF00;
    border-radius: 1rem;
    box-shadow: 0 0 20px rgba(198, 255, 0, 0.2), 0 8px 32px rgba(0, 0, 0, 0.4);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .dark .cyber-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 0 40px rgba(198, 255, 0, 0.4), 0 0 20px rgba(57, 255, 20, 0.3), 0 15px 50px rgba(0, 0, 0, 0.6);
    border-color: #39FF14;
  }

  /* Cyberpunk Cards with Neon Glow - Light Mode */
  .cyber-card {
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid #00B4FF;
    border-radius: 1rem;
    box-shadow: 0 0 20px rgba(0, 180, 255, 0.2), 0 8px 32px rgba(0, 0, 0, 0.1);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .cyber-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 0 40px rgba(0, 180, 255, 0.4), 0 0 20px rgba(138, 43, 226, 0.3), 0 15px 50px rgba(0, 0, 0, 0.2);
    border-color: #8A2BE2;
  }

  /* Neon Loader Animation - Dark Mode */
  .dark .loader {
    width: 24px;
    height: 24px;
    border: 3px solid rgba(198, 255, 0, 0.2);
    border-top: 3px solid #C6FF00;
    border-radius: 50%;
    animation: neonSpinDark 1s linear infinite;
    box-shadow: 0 0 15px rgba(198, 255, 0, 0.4);
  }

  @keyframes neonSpinDark {
    0% { 
      transform: rotate(0deg);
      box-shadow: 0 0 15px rgba(198, 255, 0, 0.4);
    }
    50% {
      box-shadow: 0 0 25px rgba(57, 255, 20, 0.6);
    }
    100% { 
      transform: rotate(360deg);
      box-shadow: 0 0 15px rgba(198, 255, 0, 0.4);
    }
  }

  /* Neon Loader Animation - Light Mode */
  .loader {
    width: 24px;
    height: 24px;
    border: 3px solid rgba(0, 180, 255, 0.2);
    border-top: 3px solid #00B4FF;
    border-radius: 50%;
    animation: neonSpinLight 1s linear infinite;
    box-shadow: 0 0 15px rgba(0, 180, 255, 0.4);
  }

  @keyframes neonSpinLight {
    0% { 
      transform: rotate(0deg);
      box-shadow: 0 0 15px rgba(0, 180, 255, 0.4);
    }
    50% {
      box-shadow: 0 0 25px rgba(138, 43, 226, 0.6);
    }
    100% { 
      transform: rotate(360deg);
      box-shadow: 0 0 15px rgba(0, 180, 255, 0.4);
    }
  }

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}